// RobotBuilder Version: 3.1
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package frc.robot.subsystems;

import frc.robot.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj2.command.SubsystemBase;
import java.util.List;
import java.util.ArrayList;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import com.ctre.phoenix.motorcontrol.can.WPI_TalonFX;

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS

/**
 *
 */
public class Drivetrain extends SubsystemBase {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private WPI_TalonFX testSwerveDriver;
    private WPI_TalonFX testSwerveTurner;
    private List<WPI_TalonFX> falcons = new ArrayList<WPI_TalonFX>();
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    /**
    *
    */
    public Drivetrain() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
                // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        for(int i = 2; i<9; i++){
            falcons.add(new WPI_TalonFX(i));
        }
        timeToSwitchDrive = System.currentTimeMillis();
        //testSwerveTurner = new WPI_TalonFX(1);

    }
    long timeToSwitchDrive = 0;
    long timeToSwitchTurn = 0;
    long timeBetween = 1000*60*2;
    double turnPower = 0;
    double drivePower = 0.25;
    boolean forward = true;
    @Override
    public void periodic() {

        long now = System.currentTimeMillis();
        if(now>timeToSwitchDrive){
            timeToSwitchDrive = now+timeBetween;
            forward = !forward;
        }
        if(forward){
            if(drivePower<0.25){
                drivePower+=0.003;
            }
        }else{
            if(drivePower>-0.25){
                drivePower-=0.003;
            }
        }
        for(WPI_TalonFX f : falcons){
            f.set(drivePower);
        }

        //testSwerveTurner.set(0.25);

    }

    @Override
    public void simulationPeriodic() {
        // This method will be called once per scheduler run when in simulation

    }

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

}
